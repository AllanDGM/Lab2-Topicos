//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVCLab2.Servicio {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerTerritory", Namespace="http://schemas.datacontract.org/2004/07/WcfService1")]
    [System.SerializableAttribute()]
    public partial class CustomerTerritory : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApellidoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NombreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PersonIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TerritorioField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Apellido {
            get {
                return this.ApellidoField;
            }
            set {
                if ((object.ReferenceEquals(this.ApellidoField, value) != true)) {
                    this.ApellidoField = value;
                    this.RaisePropertyChanged("Apellido");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nombre {
            get {
                return this.NombreField;
            }
            set {
                if ((object.ReferenceEquals(this.NombreField, value) != true)) {
                    this.NombreField = value;
                    this.RaisePropertyChanged("Nombre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PersonID {
            get {
                return this.PersonIDField;
            }
            set {
                if ((this.PersonIDField.Equals(value) != true)) {
                    this.PersonIDField = value;
                    this.RaisePropertyChanged("PersonID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Territorio {
            get {
                return this.TerritorioField;
            }
            set {
                if ((object.ReferenceEquals(this.TerritorioField, value) != true)) {
                    this.TerritorioField = value;
                    this.RaisePropertyChanged("Territorio");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="Servicio.IServicio")]
    public interface IServicio {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ObtenerClientesNombreCliente", ReplyAction="http://tempuri.org/IServicio/ObtenerClientesNombreClienteResponse")]
        MVCLab2.Servicio.CustomerTerritory[] ObtenerClientesNombreCliente(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ObtenerClientesNombreCliente", ReplyAction="http://tempuri.org/IServicio/ObtenerClientesNombreClienteResponse")]
        System.Threading.Tasks.Task<MVCLab2.Servicio.CustomerTerritory[]> ObtenerClientesNombreClienteAsync(string nombre);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ObtenerClientesNombrePais", ReplyAction="http://tempuri.org/IServicio/ObtenerClientesNombrePaisResponse")]
        MVCLab2.Servicio.CustomerTerritory[] ObtenerClientesNombrePais(string pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ObtenerClientesNombrePais", ReplyAction="http://tempuri.org/IServicio/ObtenerClientesNombrePaisResponse")]
        System.Threading.Tasks.Task<MVCLab2.Servicio.CustomerTerritory[]> ObtenerClientesNombrePaisAsync(string pais);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ObtenerClientes", ReplyAction="http://tempuri.org/IServicio/ObtenerClientesResponse")]
        MVCLab2.Servicio.CustomerTerritory[] ObtenerClientes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicio/ObtenerClientes", ReplyAction="http://tempuri.org/IServicio/ObtenerClientesResponse")]
        System.Threading.Tasks.Task<MVCLab2.Servicio.CustomerTerritory[]> ObtenerClientesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioChannel : MVCLab2.Servicio.IServicio, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioClient : System.ServiceModel.ClientBase<MVCLab2.Servicio.IServicio>, MVCLab2.Servicio.IServicio {
        
        public ServicioClient() {
        }
        
        public ServicioClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVCLab2.Servicio.CustomerTerritory[] ObtenerClientesNombreCliente(string nombre) {
            return base.Channel.ObtenerClientesNombreCliente(nombre);
        }
        
        public System.Threading.Tasks.Task<MVCLab2.Servicio.CustomerTerritory[]> ObtenerClientesNombreClienteAsync(string nombre) {
            return base.Channel.ObtenerClientesNombreClienteAsync(nombre);
        }
        
        public MVCLab2.Servicio.CustomerTerritory[] ObtenerClientesNombrePais(string pais) {
            return base.Channel.ObtenerClientesNombrePais(pais);
        }
        
        public System.Threading.Tasks.Task<MVCLab2.Servicio.CustomerTerritory[]> ObtenerClientesNombrePaisAsync(string pais) {
            return base.Channel.ObtenerClientesNombrePaisAsync(pais);
        }
        
        public MVCLab2.Servicio.CustomerTerritory[] ObtenerClientes() {
            return base.Channel.ObtenerClientes();
        }
        
        public System.Threading.Tasks.Task<MVCLab2.Servicio.CustomerTerritory[]> ObtenerClientesAsync() {
            return base.Channel.ObtenerClientesAsync();
        }
    }
}
